import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import esbuildSvelte from "esbuild-svelte";
import sveltePreprocess from "svelte-preprocess";

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/`;

const prod = (process.argv[2] === "production");

// Aquí añadimos esbuildSvelte a la lista de plugins en la configuración de esbuild
const plugins = [
  esbuildSvelte({
    compilerOptions: { css: true }, // Permite que los estilos CSS sean inyectados en el DOM
    preprocess: sveltePreprocess(), // Preprocesa archivos Svelte (por ejemplo, para soportar TypeScript o SCSS)
  }),
];
// --> Fin de plugins

const context = await esbuild.context({
  banner: {
    js: banner,
  },
  entryPoints: ["src/main.ts"],
  bundle: true,
  external: [
    "obsidian",
    "electron",
    "@codemirror/autocomplete",
    "@codemirror/collab",
    "@codemirror/commands",
    "@codemirror/language",
    "@codemirror/lint",
    "@codemirror/search",
    "@codemirror/state",
    "@codemirror/view",
    "@lezer/common",
    "@lezer/highlight",
    "@lezer/lr",
    ...builtins],
  format: "cjs",
  target: "es2018",
  logLevel: "info",
  sourcemap: prod ? false : "inline",
  treeShaking: true,
  outfile: "main.js",
  plugins, // Añadimos los plugins aquí
});

if (prod) {
  await context.rebuild();
  process.exit(0);
} else {
  await context.watch();
}
